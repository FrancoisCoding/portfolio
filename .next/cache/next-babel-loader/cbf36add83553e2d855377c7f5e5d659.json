{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport auth0 from 'auth0-js';\nimport Router from 'next/router';\nimport Cookies from 'js-cookie';\nimport jwt from 'jsonwebtoken';\nimport axios from 'axios';\n\nvar Auth0 =\n/*#__PURE__*/\nfunction () {\n  function Auth0() {\n    _classCallCheck(this, Auth0);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-muyfhpy4.auth0.com',\n      clientID: '1gbOuVc9mDL2rfsmbsDFGOPbWH0eB2oT',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n  }\n\n  _createClass(Auth0, [{\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this.auth0.parseHash(function (err, authResult) {\n          if (authResult && authResult.accessToken && authResult.idToken) {\n            _this.setSession(authResult);\n\n            resolve();\n          } else if (err) {\n            reject(err);\n            console.log(err);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      // debugger;\n      // Set the time that the Access Token will expire at\n      var conversion = authResult.expiresIn * 1000;\n\n      var expiresAt = _JSON$stringify(conversion + new Date().getTime());\n\n      Cookies.set('user', authResult.idTokenPayload);\n      Cookies.set('jwt', authResult.idToken);\n      Cookies.set('expiresAt', expiresAt);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Clear Access Token and ID Token from local storage\n      Cookies.remove('user');\n      Cookies.remove('jwt');\n      Cookies.remove('expiresAt');\n      this.auth0.logout({\n        returnTo: '',\n        clientID: '1gbOuVc9mDL2rfsmbsDFGOPbWH0eB2oT'\n      });\n    }\n  }, {\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"getJWKS\",\n    value: function getJWKS() {\n      var res, jwks;\n      return _regeneratorRuntime.async(function getJWKS$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(axios.get('https://dev-muyfhpy4.auth0.com/.well-known/jwks.json'));\n\n            case 2:\n              res = _context.sent;\n              jwks = res.data;\n              return _context.abrupt(\"return\", jwks);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"verifyToken\",\n    value: function verifyToken(token) {\n      var decodedToken, jwks, jwk, cert, verifiedToken, _expiresAt, _currentTime, expiresAt, currentTime;\n\n      return _regeneratorRuntime.async(function verifyToken$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!token) {\n                _context2.next = 25;\n                break;\n              }\n\n              decodedToken = jwt.decode(token, {\n                complete: true\n              });\n\n              if (decodedToken) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", undefined);\n\n            case 4:\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(this.getJWKS());\n\n            case 6:\n              jwks = _context2.sent;\n              jwk = jwks.keys[0]; // BUILD CERTIFICATE\n\n              cert = jwk.x5c[0];\n              cert = cert.match(/.{1,64}/g).join('\\n');\n              cert = \"-----BEGIN CERTIFICATE-----\\n\".concat(cert, \"\\n-----END CERTIFICATE-----\\n\"); //\n\n              if (!(jwk.kid === decodedToken.header.kid)) {\n                _context2.next = 22;\n                break;\n              }\n\n              _context2.prev = 12;\n              verifiedToken = jwt.verify(token, cert);\n              _expiresAt = verifiedToken.exp * 1000;\n              _currentTime = new Date();\n              return _context2.abrupt(\"return\", verifiedToken && _currentTime.getTime() < _expiresAt ? decodedToken : undefined);\n\n            case 19:\n              _context2.prev = 19;\n              _context2.t0 = _context2[\"catch\"](12);\n              return _context2.abrupt(\"return\", undefined);\n\n            case 22:\n              expiresAt = decodedToken.exp * 1000;\n              currentTime = new Date();\n              return _context2.abrupt(\"return\", decodedToken && currentTime.getTime() < expiresAt ? decodedToken : undefined);\n\n            case 25:\n              return _context2.abrupt(\"return\", undefined);\n\n            case 26:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[12, 19]]);\n    }\n  }, {\n    key: \"clientAuth\",\n    value: function clientAuth() {\n      var token, verifiedToken;\n      return _regeneratorRuntime.async(function clientAuth$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              token = Cookies.getJSON('jwt');\n              verifiedToken = this.verifyToken(token);\n              return _context3.abrupt(\"return\", verifiedToken);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"serverAuth\",\n    value: function serverAuth(req) {\n      var tokenCookie, token, verifiedToken, currentTime;\n      return _regeneratorRuntime.async(function serverAuth$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!req.headers.cookie) {\n                _context4.next = 10;\n                break;\n              }\n\n              tokenCookie = req.headers.cookie.split(';').find(function (c) {\n                return c.trim().startsWith('jwt=');\n              });\n\n              if (tokenCookie) {\n                _context4.next = 4;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", undefined);\n\n            case 4:\n              token = tokenCookie.split('=')[1];\n              _context4.next = 7;\n              return _regeneratorRuntime.awrap(this.verifyToken(token));\n\n            case 7:\n              verifiedToken = _context4.sent;\n              currentTime = new Date();\n              return _context4.abrupt(\"return\", verifiedToken);\n\n            case 10:\n              return _context4.abrupt(\"return\", undefined);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this);\n    }\n  }]);\n\n  return Auth0;\n}();\n\nvar auth0Client = new Auth0();\nexport default auth0Client;","map":{"version":3,"sources":["F:/WEBSITES/16_portfolio/services/auth0.js"],"names":["auth0","Router","Cookies","jwt","axios","Auth0","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","logout","handleAuthentication","resolve","reject","parseHash","err","authResult","accessToken","idToken","setSession","console","log","conversion","expiresIn","expiresAt","Date","getTime","set","idTokenPayload","remove","returnTo","authorize","get","res","jwks","data","token","decodedToken","decode","complete","undefined","getJWKS","jwk","keys","cert","x5c","match","join","kid","header","verifiedToken","verify","exp","currentTime","getJSON","verifyToken","req","headers","cookie","tokenCookie","split","find","c","trim","startsWith","auth0Client"],"mappings":"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","sourcesContent":["import auth0 from 'auth0-js';\r\nimport Router from 'next/router';\r\nimport Cookies from 'js-cookie';\r\nimport jwt from 'jsonwebtoken';\r\nimport axios from 'axios';\r\n\r\nclass Auth0 {\r\n    constructor() {\r\n        this.auth0 = new auth0.WebAuth({\r\n            domain: 'dev-muyfhpy4.auth0.com',\r\n            clientID: '1gbOuVc9mDL2rfsmbsDFGOPbWH0eB2oT',\r\n            redirectUri: 'http://localhost:3000/callback',\r\n            responseType: 'token id_token',\r\n            scope: 'openid profile'\r\n        });\r\n\r\n        this.login = this.login.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    }\r\n\r\n    handleAuthentication() {\r\n        return new Promise((resolve, reject) => {\r\n            this.auth0.parseHash((err, authResult) => {\r\n                if (\r\n                    authResult &&\r\n                    authResult.accessToken &&\r\n                    authResult.idToken\r\n                ) {\r\n                    this.setSession(authResult);\r\n                    resolve();\r\n                } else if (err) {\r\n                    reject(err);\r\n                    console.log(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    setSession(authResult) {\r\n        // debugger;\r\n        // Set the time that the Access Token will expire at\r\n        const conversion = authResult.expiresIn * 1000;\r\n        const expiresAt = JSON.stringify(conversion + new Date().getTime());\r\n        Cookies.set('user', authResult.idTokenPayload);\r\n        Cookies.set('jwt', authResult.idToken);\r\n        Cookies.set('expiresAt', expiresAt);\r\n    }\r\n\r\n    logout() {\r\n        // Clear Access Token and ID Token from local storage\r\n        Cookies.remove('user');\r\n        Cookies.remove('jwt');\r\n        Cookies.remove('expiresAt');\r\n        this.auth0.logout({\r\n            returnTo: '',\r\n            clientID: '1gbOuVc9mDL2rfsmbsDFGOPbWH0eB2oT'\r\n        });\r\n    }\r\n\r\n    login() {\r\n        this.auth0.authorize();\r\n    }\r\n\r\n    async getJWKS() {\r\n        const res = await axios.get(\r\n            'https://dev-muyfhpy4.auth0.com/.well-known/jwks.json'\r\n        );\r\n        const jwks = res.data;\r\n        return jwks;\r\n    }\r\n\r\n    async verifyToken(token) {\r\n        if (token) {\r\n            const decodedToken = jwt.decode(token, { complete: true });\r\n\r\n            if (!decodedToken) {\r\n                return undefined;\r\n            }\r\n            const jwks = await this.getJWKS();\r\n            const jwk = jwks.keys[0];\r\n            // BUILD CERTIFICATE\r\n            let cert = jwk.x5c[0];\r\n            cert = cert.match(/.{1,64}/g).join('\\n');\r\n            cert = `-----BEGIN CERTIFICATE-----\\n${cert}\\n-----END CERTIFICATE-----\\n`;\r\n            //\r\n\r\n            if (jwk.kid === decodedToken.header.kid) {\r\n                try {\r\n                    const verifiedToken = jwt.verify(token, cert);\r\n                    const expiresAt = verifiedToken.exp * 1000;\r\n                    const currentTime = new Date();\r\n                    return verifiedToken && currentTime.getTime() < expiresAt\r\n                        ? decodedToken\r\n                        : undefined;\r\n                } catch (err) {\r\n                    return undefined;\r\n                }\r\n            }\r\n            const expiresAt = decodedToken.exp * 1000;\r\n            const currentTime = new Date();\r\n            return decodedToken && currentTime.getTime() < expiresAt\r\n                ? decodedToken\r\n                : undefined;\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    async clientAuth() {\r\n        const token = Cookies.getJSON('jwt');\r\n        const verifiedToken = this.verifyToken(token);\r\n        return verifiedToken;\r\n    }\r\n\r\n    async serverAuth(req) {\r\n        if (req.headers.cookie) {\r\n            const tokenCookie = req.headers.cookie\r\n                .split(';')\r\n                .find(c => c.trim().startsWith('jwt='));\r\n            if (!tokenCookie) {\r\n                return undefined;\r\n            }\r\n            const token = tokenCookie.split('=')[1];\r\n            const verifiedToken = await this.verifyToken(token);\r\n\r\n            const currentTime = new Date();\r\n            return verifiedToken;\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\nconst auth0Client = new Auth0();\r\n\r\nexport default auth0Client;\r\n"]},"metadata":{},"sourceType":"module"}