{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport auth0 from 'auth0-js';\nimport Router from 'next/router';\n\nclass Auth0 {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: 'dev-muyfhpy4.auth0.com',\n      clientID: '1gbOuVc9mDL2rfsmbsDFGOPbWH0eB2oT',\n      redirectUri: 'http://localhost:3000/callback',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.login = this.login.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n  }\n\n  handleAuthentication() {\n    debugger;\n    return new _Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          this.setSession(authResult);\n          resolve();\n        } else if (err) {\n          reject(err);\n          console.log(err);\n        }\n      });\n    });\n  }\n\n  setSession(authResult) {\n    let expiresAt = _JSON$stringify(authResult.expiresIn * 1000 + new Date().getTime());\n\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n    Router.push('/');\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n}\n\nconst auth0Client = new Auth0();\nexport default auth0Client;","map":{"version":3,"sources":["F:/WEBSITES/16_portfolio/services/auth0.js"],"names":["auth0","Router","Auth0","constructor","WebAuth","domain","clientID","redirectUri","responseType","scope","login","bind","handleAuthentication","resolve","reject","parseHash","err","authResult","accessToken","idToken","setSession","console","log","expiresAt","expiresIn","Date","getTime","localStorage","setItem","push","authorize","auth0Client"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,KAAN,CAAY;AACRC,EAAAA,WAAW,GAAG;AACV,SAAKH,KAAL,GAAa,IAAIA,KAAK,CAACI,OAAV,CAAkB;AAC3BC,MAAAA,MAAM,EAAE,wBADmB;AAE3BC,MAAAA,QAAQ,EAAE,kCAFiB;AAG3BC,MAAAA,WAAW,EAAE,gCAHc;AAI3BC,MAAAA,YAAY,EAAE,gBAJa;AAK3BC,MAAAA,KAAK,EAAE;AALoB,KAAlB,CAAb;AAQA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACH;;AAEDC,EAAAA,oBAAoB,GAAG;AACnB;AACA,WAAO,aAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKd,KAAL,CAAWe,SAAX,CAAqB,CAACC,GAAD,EAAMC,UAAN,KAAqB;AACtC,YACIA,UAAU,IACVA,UAAU,CAACC,WADX,IAEAD,UAAU,CAACE,OAHf,EAIE;AACE,eAAKC,UAAL,CAAgBH,UAAhB;AACAJ,UAAAA,OAAO;AACV,SAPD,MAOO,IAAIG,GAAJ,EAAS;AACZF,UAAAA,MAAM,CAACE,GAAD,CAAN;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ;AACH;AACJ,OAZD;AAaH,KAdM,CAAP;AAeH;;AAEDI,EAAAA,UAAU,CAACH,UAAD,EAAa;AACnB,QAAIM,SAAS,GAAG,gBACZN,UAAU,CAACO,SAAX,GAAuB,IAAvB,GAA8B,IAAIC,IAAJ,GAAWC,OAAX,EADlB,CAAhB;;AAGAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCX,UAAU,CAACC,WAAhD;AACAS,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCX,UAAU,CAACE,OAA5C;AACAQ,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCL,SAAnC;AACAtB,IAAAA,MAAM,CAAC4B,IAAP,CAAY,GAAZ;AACH;;AAEDnB,EAAAA,KAAK,GAAG;AACJ,SAAKV,KAAL,CAAW8B,SAAX;AACH;;AA7CO;;AAgDZ,MAAMC,WAAW,GAAG,IAAI7B,KAAJ,EAApB;AAEA,eAAe6B,WAAf","sourcesContent":["import auth0 from 'auth0-js';\r\nimport Router from 'next/router';\r\n\r\nclass Auth0 {\r\n    constructor() {\r\n        this.auth0 = new auth0.WebAuth({\r\n            domain: 'dev-muyfhpy4.auth0.com',\r\n            clientID: '1gbOuVc9mDL2rfsmbsDFGOPbWH0eB2oT',\r\n            redirectUri: 'http://localhost:3000/callback',\r\n            responseType: 'token id_token',\r\n            scope: 'openid profile'\r\n        });\r\n\r\n        this.login = this.login.bind(this);\r\n        this.handleAuthentication = this.handleAuthentication.bind(this);\r\n    }\r\n\r\n    handleAuthentication() {\r\n        debugger;\r\n        return new Promise((resolve, reject) => {\r\n            this.auth0.parseHash((err, authResult) => {\r\n                if (\r\n                    authResult &&\r\n                    authResult.accessToken &&\r\n                    authResult.idToken\r\n                ) {\r\n                    this.setSession(authResult);\r\n                    resolve();\r\n                } else if (err) {\r\n                    reject(err);\r\n                    console.log(err);\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    setSession(authResult) {\r\n        let expiresAt = JSON.stringify(\r\n            authResult.expiresIn * 1000 + new Date().getTime()\r\n        );\r\n        localStorage.setItem('access_token', authResult.accessToken);\r\n        localStorage.setItem('id_token', authResult.idToken);\r\n        localStorage.setItem('expires_at', expiresAt);\r\n        Router.push('/');\r\n    }\r\n\r\n    login() {\r\n        this.auth0.authorize();\r\n    }\r\n}\r\n\r\nconst auth0Client = new Auth0();\r\n\r\nexport default auth0Client;\r\n"]},"metadata":{},"sourceType":"module"}